#ifndef WINDOW_H
#define WINDOW_H

#include <QWidget>
#include <QGLWidget>
#include <iostream>
#include "world.h"

QT_BEGIN_NAMESPACE
class QSlider;
QT_END_NAMESPACE

class DisplayList;
class Robot;
//class World;

/*! \brief This QWidget is the window for the optional GUI used to visualize the Robot. (see GLWidget)
 *
 * The code is mostly borrowed from the Qt HelloGL example.
 */

class Window : public QWidget
{
    Q_OBJECT

public:
    Window();
	
	GLWidget *glWidget;

    //! Returns a pointer to the GLWidget used to render the Robot.
    /*! Useful for connecting signals and slots in the scope of main() */
    //GLWidget* getGlWidget();
	
	//void setRobot( Robot* aRobot ) { glWidget->setRobot(aRobot); }
	//void setWorld( World* aWorld ) { glWidget->setWorld(aWorld); }
	
//public slots:
	
    //void update() { glWidget->update(); }
	
	
	//void removeDisplayList( GLuint num ) { glDeleteLists(num, 1); }
	
	//void deleteObject( Object* object ) { glWidget->getWorld()->remove(object); }
	//void deletePrimitive( Object* object, PrimitiveObject* primitive ) { glWidget->getWorld()->removePrimitive(object,primitive); }
	//void clearWorld() { glWidget->getWorld()->clear(); }

};

#endif
