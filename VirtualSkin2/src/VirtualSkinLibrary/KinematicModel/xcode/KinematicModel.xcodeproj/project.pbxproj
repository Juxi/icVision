// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 45;
	objects = {

/* Begin PBXAggregateTarget section */
		5EAC305EAC305EAC30000000 /* ALL_BUILD */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 5E0D405E0D405E0D40000000 /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */;
			buildPhases = (
				5EAE005EAE005EAE00000000 /* CMake ReRun */,
				5E04405E04405E0440000000 /* CMake Rules */,
			);
			dependencies = (
				103E120103E120103E120000 /* PBXTargetDependency */,
				103E890103E890103E890000 /* PBXTargetDependency */,
			);
			name = ALL_BUILD;
			productName = ALL_BUILD;
		};
		5F23605F23605F2360000000 /* install */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 5F33D05F33D05F33D0000000 /* Build configuration list for PBXAggregateTarget "install" */;
			buildPhases = (
				5F25005F25005F2500000000 /* CMake ReRun */,
				5F2AF05F2AF05F2AF0000000 /* CMake PostBuild Rules */,
			);
			dependencies = (
				103F0D0103F0D0103F0D0000 /* PBXTargetDependency */,
			);
			name = install;
			productName = install;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		100F500100F500100F500000 /* model.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 100ED70100ED70100ED70000 /* model.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		10100C010100C010100C0000 /* modelexception.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 100F890100F890100F890000 /* modelexception.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		1010B901010B901010B90000 /* modelwindow.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 10103D010103D010103D0000 /* modelwindow.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		10116B010116B010116B0000 /* glwidget.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 1010E301010E301010E30000 /* glwidget.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		101224010122401012240000 /* transformable.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 1011A401011A401011A40000 /* transformable.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		1012D901012D901012D90000 /* compositeobject.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 101255010125501012550000 /* compositeobject.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		10138F010138F010138F0000 /* primitiveobject.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 10130D010130D010130D0000 /* primitiveobject.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		10143C010143C010143C0000 /* sphere.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 1013C001013C001013C00000 /* sphere.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		1014EE01014EE01014EE0000 /* cylinder.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 101475010147501014750000 /* cylinder.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		1015A401015A401015A40000 /* box.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 101527010152701015270000 /* box.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		101657010165701016570000 /* robot.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 1015DD01015DD01015DD0000 /* robot.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		101709010170901017090000 /* bodyPart.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 101681010168101016810000 /* bodyPart.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		1017BC01017BC01017BC0000 /* kintreenode.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 101742010174201017420000 /* kintreenode.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		10186E010186E010186E0000 /* motor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 1017E601017E601017E60000 /* motor.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		101921010192101019210000 /* interval.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 1018A701018A701018A70000 /* interval.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		1019D301019D301019D30000 /* link.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 10194B010194B010194B0000 /* link.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		101A8C0101A8C0101A8C0000 /* joint.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 101A0C0101A0C0101A0C0000 /* joint.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		101B480101B480101B480000 /* joint_revolute.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 101ACD0101ACD0101ACD0000 /* joint_revolute.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		101BF60101BF60101BF60000 /* zpHandler.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 101B7C0101B7C0101B7C0000 /* zpHandler.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		101CA80101CA80101CA80000 /* worldhandler.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 101C200101C200101C200000 /* worldhandler.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		101D5C0101D5C0101D5C0000 /* moc_model.cxx in Sources */ = {isa = PBXBuildFile; fileRef = 101CE10101CE10101CE10000 /* moc_model.cxx */; settings = {COMPILER_FLAGS = ""; }; };
		101DF20101DF20101DF20000 /* moc_modelwindow.cxx in Sources */ = {isa = PBXBuildFile; fileRef = 101D900101D900101D900000 /* moc_modelwindow.cxx */; settings = {COMPILER_FLAGS = ""; }; };
		101EC90101EC90101EC90000 /* moc_glwidget.cxx in Sources */ = {isa = PBXBuildFile; fileRef = 101E4D0101E4D0101E4D0000 /* moc_glwidget.cxx */; settings = {COMPILER_FLAGS = ""; }; };
		101F7F0101F7F0101F7F0000 /* moc_robot.cxx in Sources */ = {isa = PBXBuildFile; fileRef = 101F040101F040101F040000 /* moc_robot.cxx */; settings = {COMPILER_FLAGS = ""; }; };
		103097010309701030970000 /* main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 103021010302101030210000 /* main.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		103147010314701031470000 /* objectSoup.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 1030D001030D001030D00000 /* objectSoup.cpp */; settings = {COMPILER_FLAGS = ""; }; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		103DC20103DC20103DC20000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5E8D305E8D305E8D30000000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 102389010238901023890000;
			remoteInfo = KinematicModel;
		};
		103E3A0103E3A0103E3A0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5E8D305E8D305E8D30000000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 10334C010334C010334C0000;
			remoteInfo = WorldModelDemo;
		};
		103EB10103EB10103EB10000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5E8D305E8D305E8D30000000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 5EAC305EAC305EAC30000000;
			remoteInfo = ALL_BUILD;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		10002C010002C010002C0000 /* modelconstants.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = modelconstants.h; path = LibKinematicModel/modelconstants.h; sourceTree = SOURCE_ROOT; };
		1000E601000E601000E60000 /* model.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = model.h; path = LibKinematicModel/model.h; sourceTree = SOURCE_ROOT; };
		100189010018901001890000 /* modelexception.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = modelexception.h; path = LibKinematicModel/modelexception.h; sourceTree = SOURCE_ROOT; };
		10024C010024C010024C0000 /* modelwindow.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = modelwindow.h; path = LibKinematicModel/modelwindow.h; sourceTree = SOURCE_ROOT; };
		1002FF01002FF01002FF0000 /* glwidget.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = glwidget.h; path = LibKinematicModel/glwidget.h; sourceTree = SOURCE_ROOT; };
		1003B301003B301003B30000 /* transformable.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = transformable.h; path = LibKinematicModel/transformable.h; sourceTree = SOURCE_ROOT; };
		100466010046601004660000 /* compositeobject.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = compositeobject.h; path = LibKinematicModel/compositeobject.h; sourceTree = SOURCE_ROOT; };
		100516010051601005160000 /* primitiveobject.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = primitiveobject.h; path = LibKinematicModel/primitiveobject.h; sourceTree = SOURCE_ROOT; };
		1005CB01005CB01005CB0000 /* sphere.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = sphere.h; path = LibKinematicModel/sphere.h; sourceTree = SOURCE_ROOT; };
		10067E010067E010067E0000 /* cylinder.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = cylinder.h; path = LibKinematicModel/cylinder.h; sourceTree = SOURCE_ROOT; };
		100731010073101007310000 /* box.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = box.h; path = LibKinematicModel/box.h; sourceTree = SOURCE_ROOT; };
		1007DE01007DE01007DE0000 /* robot.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = robot.h; path = LibKinematicModel/robot.h; sourceTree = SOURCE_ROOT; };
		100890010089001008900000 /* bodyPart.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = bodyPart.h; path = LibKinematicModel/bodyPart.h; sourceTree = SOURCE_ROOT; };
		100942010094201009420000 /* kintreenode.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = kintreenode.h; path = LibKinematicModel/kintreenode.h; sourceTree = SOURCE_ROOT; };
		1009F401009F401009F40000 /* motor.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = motor.h; path = LibKinematicModel/motor.h; sourceTree = SOURCE_ROOT; };
		100AA60100AA60100AA60000 /* interval.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = interval.h; path = LibKinematicModel/interval.h; sourceTree = SOURCE_ROOT; };
		100B580100B580100B580000 /* link.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = link.h; path = LibKinematicModel/link.h; sourceTree = SOURCE_ROOT; };
		100C130100C130100C130000 /* joint.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = joint.h; path = LibKinematicModel/joint.h; sourceTree = SOURCE_ROOT; };
		100CC30100CC30100CC30000 /* joint_revolute.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = joint_revolute.h; path = LibKinematicModel/joint_revolute.h; sourceTree = SOURCE_ROOT; };
		100D730100D730100D730000 /* zpHandler.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = zpHandler.h; path = LibKinematicModel/zpHandler.h; sourceTree = SOURCE_ROOT; };
		100E250100E250100E250000 /* worldhandler.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = worldhandler.h; path = LibKinematicModel/worldhandler.h; sourceTree = SOURCE_ROOT; };
		100ED70100ED70100ED70000 /* model.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = model.cpp; path = LibKinematicModel/model.cpp; sourceTree = SOURCE_ROOT; };
		100F890100F890100F890000 /* modelexception.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = modelexception.cpp; path = LibKinematicModel/modelexception.cpp; sourceTree = SOURCE_ROOT; };
		10103D010103D010103D0000 /* modelwindow.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = modelwindow.cpp; path = LibKinematicModel/modelwindow.cpp; sourceTree = SOURCE_ROOT; };
		1010E301010E301010E30000 /* glwidget.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = glwidget.cpp; path = LibKinematicModel/glwidget.cpp; sourceTree = SOURCE_ROOT; };
		1011A401011A401011A40000 /* transformable.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = transformable.cpp; path = LibKinematicModel/transformable.cpp; sourceTree = SOURCE_ROOT; };
		101255010125501012550000 /* compositeobject.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = compositeobject.cpp; path = LibKinematicModel/compositeobject.cpp; sourceTree = SOURCE_ROOT; };
		10130D010130D010130D0000 /* primitiveobject.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = primitiveobject.cpp; path = LibKinematicModel/primitiveobject.cpp; sourceTree = SOURCE_ROOT; };
		1013C001013C001013C00000 /* sphere.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = sphere.cpp; path = LibKinematicModel/sphere.cpp; sourceTree = SOURCE_ROOT; };
		101475010147501014750000 /* cylinder.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = cylinder.cpp; path = LibKinematicModel/cylinder.cpp; sourceTree = SOURCE_ROOT; };
		101527010152701015270000 /* box.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = box.cpp; path = LibKinematicModel/box.cpp; sourceTree = SOURCE_ROOT; };
		1015DD01015DD01015DD0000 /* robot.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = robot.cpp; path = LibKinematicModel/robot.cpp; sourceTree = SOURCE_ROOT; };
		101681010168101016810000 /* bodyPart.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = bodyPart.cpp; path = LibKinematicModel/bodyPart.cpp; sourceTree = SOURCE_ROOT; };
		101742010174201017420000 /* kintreenode.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = kintreenode.cpp; path = LibKinematicModel/kintreenode.cpp; sourceTree = SOURCE_ROOT; };
		1017E601017E601017E60000 /* motor.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = motor.cpp; path = LibKinematicModel/motor.cpp; sourceTree = SOURCE_ROOT; };
		1018A701018A701018A70000 /* interval.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = interval.cpp; path = LibKinematicModel/interval.cpp; sourceTree = SOURCE_ROOT; };
		10194B010194B010194B0000 /* link.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = link.cpp; path = LibKinematicModel/link.cpp; sourceTree = SOURCE_ROOT; };
		101A0C0101A0C0101A0C0000 /* joint.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = joint.cpp; path = LibKinematicModel/joint.cpp; sourceTree = SOURCE_ROOT; };
		101ABC0101ABC0101ABC0000 /* objectSoup.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = objectSoup.h; path = WorldModelDemo/objectSoup.h; sourceTree = SOURCE_ROOT; };
		101ACD0101ACD0101ACD0000 /* joint_revolute.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = joint_revolute.cpp; path = LibKinematicModel/joint_revolute.cpp; sourceTree = SOURCE_ROOT; };
		101B7C0101B7C0101B7C0000 /* zpHandler.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = zpHandler.cpp; path = LibKinematicModel/zpHandler.cpp; sourceTree = SOURCE_ROOT; };
		101C200101C200101C200000 /* worldhandler.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = worldhandler.cpp; path = LibKinematicModel/worldhandler.cpp; sourceTree = SOURCE_ROOT; };
		101CE10101CE10101CE10000 /* moc_model.cxx */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = moc_model.cxx; path = xcode/LibKinematicModel/moc_model.cxx; sourceTree = SOURCE_ROOT; };
		101D900101D900101D900000 /* moc_modelwindow.cxx */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = moc_modelwindow.cxx; path = xcode/LibKinematicModel/moc_modelwindow.cxx; sourceTree = SOURCE_ROOT; };
		101E4D0101E4D0101E4D0000 /* moc_glwidget.cxx */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = moc_glwidget.cxx; path = xcode/LibKinematicModel/moc_glwidget.cxx; sourceTree = SOURCE_ROOT; };
		101F040101F040101F040000 /* moc_robot.cxx */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = moc_robot.cxx; path = xcode/LibKinematicModel/moc_robot.cxx; sourceTree = SOURCE_ROOT; };
		101FB30101FB30101FB30000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = LibKinematicModel/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		102069010206901020690000 /* moc_model.cxx.rule */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode; name = moc_model.cxx.rule; path = xcode/LibKinematicModel/moc_model.cxx.rule; sourceTree = SOURCE_ROOT; };
		10211D010211D010211D0000 /* moc_modelwindow.cxx.rule */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode; name = moc_modelwindow.cxx.rule; path = xcode/LibKinematicModel/moc_modelwindow.cxx.rule; sourceTree = SOURCE_ROOT; };
		1021C601021C601021C60000 /* moc_glwidget.cxx.rule */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode; name = moc_glwidget.cxx.rule; path = xcode/LibKinematicModel/moc_glwidget.cxx.rule; sourceTree = SOURCE_ROOT; };
		10228E010228E010228E0000 /* moc_robot.cxx.rule */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode; name = moc_robot.cxx.rule; path = xcode/LibKinematicModel/moc_robot.cxx.rule; sourceTree = SOURCE_ROOT; };
		102F0F0102F0F0102F0F0000 /* libKinematicModel.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = libKinematicModel.a; sourceTree = BUILT_PRODUCTS_DIR; };
		103021010302101030210000 /* main.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = main.cpp; path = WorldModelDemo/main.cpp; sourceTree = SOURCE_ROOT; };
		1030D001030D001030D00000 /* objectSoup.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = objectSoup.cpp; path = WorldModelDemo/objectSoup.cpp; sourceTree = SOURCE_ROOT; };
		10317B010317B010317B0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = WorldModelDemo/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		103D590103D590103D590000 /* WorldModelDemo */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = WorldModelDemo; sourceTree = BUILT_PRODUCTS_DIR; };
		5F15705F15705F1570000000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
/* End PBXFileReference section */

/* Begin PBXGroup section */
		57D8A057D8A057D8A0000000 /* Resources */ = {
			isa = PBXGroup;
			children = (
			);
			name = Resources;
			sourceTree = "<group>";
		};
		5813D05813D05813D0000000 /* Sources */ = {
			isa = PBXGroup;
			children = (
				5E3EE05E3EE05E3EE0000000 /* ALL_BUILD */,
				5E4AB05E4AB05E4AB0000000 /* KinematicModel */,
				5E4A005E4A005E4A00000000 /* WorldModelDemo */,
			);
			name = Sources;
			sourceTree = "<group>";
		};
		581D10581D10581D10000000 = {
			isa = PBXGroup;
			children = (
				5813D05813D05813D0000000 /* Sources */,
				57D8A057D8A057D8A0000000 /* Resources */,
				5E3D205E3D205E3D20000000 /* Products */,
			);
			sourceTree = "<group>";
		};
		5E3D205E3D205E3D20000000 /* Products */ = {
			isa = PBXGroup;
			children = (
				102F0F0102F0F0102F0F0000 /* libKinematicModel.a */,
				103D590103D590103D590000 /* WorldModelDemo */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		5E3EE05E3EE05E3EE0000000 /* ALL_BUILD */ = {
			isa = PBXGroup;
			children = (
				5E45905E45905E4590000000 /* CMake Rules */,
				5F15705F15705F1570000000 /* CMakeLists.txt */,
			);
			name = ALL_BUILD;
			sourceTree = "<group>";
		};
		5E45905E45905E4590000000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		5E4A005E4A005E4A00000000 /* WorldModelDemo */ = {
			isa = PBXGroup;
			children = (
				5E81305E81305E8130000000 /* Header Files */,
				5E85B05E85B05E85B0000000 /* Source Files */,
				10317B010317B010317B0000 /* CMakeLists.txt */,
			);
			name = WorldModelDemo;
			sourceTree = "<group>";
		};
		5E4AB05E4AB05E4AB0000000 /* KinematicModel */ = {
			isa = PBXGroup;
			children = (
				5E4EB05E4EB05E4EB0000000 /* Header Files */,
				5E60D05E60D05E60D0000000 /* Source Files */,
				5E76F05E76F05E76F0000000 /* CMake Rules */,
				101FB30101FB30101FB30000 /* CMakeLists.txt */,
			);
			name = KinematicModel;
			sourceTree = "<group>";
		};
		5E4EB05E4EB05E4EB0000000 /* Header Files */ = {
			isa = PBXGroup;
			children = (
				10002C010002C010002C0000 /* modelconstants.h */,
				1000E601000E601000E60000 /* model.h */,
				100189010018901001890000 /* modelexception.h */,
				10024C010024C010024C0000 /* modelwindow.h */,
				1002FF01002FF01002FF0000 /* glwidget.h */,
				1003B301003B301003B30000 /* transformable.h */,
				100466010046601004660000 /* compositeobject.h */,
				100516010051601005160000 /* primitiveobject.h */,
				1005CB01005CB01005CB0000 /* sphere.h */,
				10067E010067E010067E0000 /* cylinder.h */,
				100731010073101007310000 /* box.h */,
				1007DE01007DE01007DE0000 /* robot.h */,
				100890010089001008900000 /* bodyPart.h */,
				100942010094201009420000 /* kintreenode.h */,
				1009F401009F401009F40000 /* motor.h */,
				100AA60100AA60100AA60000 /* interval.h */,
				100B580100B580100B580000 /* link.h */,
				100C130100C130100C130000 /* joint.h */,
				100CC30100CC30100CC30000 /* joint_revolute.h */,
				100D730100D730100D730000 /* zpHandler.h */,
				100E250100E250100E250000 /* worldhandler.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		5E60D05E60D05E60D0000000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				100ED70100ED70100ED70000 /* model.cpp */,
				100F890100F890100F890000 /* modelexception.cpp */,
				10103D010103D010103D0000 /* modelwindow.cpp */,
				1010E301010E301010E30000 /* glwidget.cpp */,
				1011A401011A401011A40000 /* transformable.cpp */,
				101255010125501012550000 /* compositeobject.cpp */,
				10130D010130D010130D0000 /* primitiveobject.cpp */,
				1013C001013C001013C00000 /* sphere.cpp */,
				101475010147501014750000 /* cylinder.cpp */,
				101527010152701015270000 /* box.cpp */,
				1015DD01015DD01015DD0000 /* robot.cpp */,
				101681010168101016810000 /* bodyPart.cpp */,
				101742010174201017420000 /* kintreenode.cpp */,
				1017E601017E601017E60000 /* motor.cpp */,
				1018A701018A701018A70000 /* interval.cpp */,
				10194B010194B010194B0000 /* link.cpp */,
				101A0C0101A0C0101A0C0000 /* joint.cpp */,
				101ACD0101ACD0101ACD0000 /* joint_revolute.cpp */,
				101B7C0101B7C0101B7C0000 /* zpHandler.cpp */,
				101C200101C200101C200000 /* worldhandler.cpp */,
				101CE10101CE10101CE10000 /* moc_model.cxx */,
				101D900101D900101D900000 /* moc_modelwindow.cxx */,
				101E4D0101E4D0101E4D0000 /* moc_glwidget.cxx */,
				101F040101F040101F040000 /* moc_robot.cxx */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		5E76F05E76F05E76F0000000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				102069010206901020690000 /* moc_model.cxx.rule */,
				10211D010211D010211D0000 /* moc_modelwindow.cxx.rule */,
				1021C601021C601021C60000 /* moc_glwidget.cxx.rule */,
				10228E010228E010228E0000 /* moc_robot.cxx.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		5E81305E81305E8130000000 /* Header Files */ = {
			isa = PBXGroup;
			children = (
				101ABC0101ABC0101ABC0000 /* objectSoup.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		5E85B05E85B05E85B0000000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				103021010302101030210000 /* main.cpp */,
				1030D001030D001030D00000 /* objectSoup.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		102389010238901023890000 /* KinematicModel */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 102506010250601025060000 /* Build configuration list for PBXNativeTarget "KinematicModel" */;
			buildPhases = (
				1023B501023B501023B50000 /* CMake ReRun */,
				102429010242901024290000 /* CMake Rules */,
				10233D010233D010233D0000 /* Sources */,
				10247D010247D010247D0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = KinematicModel;
			productName = KinematicModel;
			productReference = 102F0F0102F0F0102F0F0000 /* libKinematicModel.a */;
			productType = "com.apple.product-type.library.static";
		};
		10334C010334C010334C0000 /* WorldModelDemo */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 103392010339201033920000 /* Build configuration list for PBXNativeTarget "WorldModelDemo" */;
			buildPhases = (
				103270010327001032700000 /* CMake ReRun */,
				10322D010322D010322D0000 /* Sources */,
				1032CD01032CD01032CD0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				103E120103E120103E120000 /* PBXTargetDependency */,
			);
			name = WorldModelDemo;
			productName = WorldModelDemo;
			productReference = 103D590103D590103D590000 /* WorldModelDemo */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		5E8D305E8D305E8D30000000 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				BuildIndependentTargetsInParallel = YES;
			};
			buildConfigurationList = 5E95D05E95D05E95D0000000 /* Build configuration list for PBXProject "KinematicModel" */;
			compatibilityVersion = "Xcode 3.1";
			hasScannedForEncodings = 0;
			mainGroup = 581D10581D10581D10000000;
			projectDirPath = ..;
			projectRoot = "";
			targets = (
				5EAC305EAC305EAC30000000 /* ALL_BUILD */,
				5F23605F23605F2360000000 /* install */,
				102389010238901023890000 /* KinematicModel */,
				10334C010334C010334C0000 /* WorldModelDemo */,
			);
		};
/* End PBXProject section */

/* Begin PBXShellScriptBuildPhase section */
		1023B501023B501023B50000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode -f /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/CMakeScripts/ReRunCMake.make";
		};
		102429010242901024290000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/LibKinematicModel -f /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/LibKinematicModel/CMakeScripts/KinematicModel_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		10247D010247D010247D0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/LibKinematicModel -f /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/LibKinematicModel/CMakeScripts/KinematicModel_postBuildPhase.make$CONFIGURATION all";
		};
		103270010327001032700000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode -f /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/CMakeScripts/ReRunCMake.make";
		};
		1032CD01032CD01032CD0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/WorldModelDemo -f /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/WorldModelDemo/CMakeScripts/WorldModelDemo_postBuildPhase.make$CONFIGURATION all";
		};
		5E04405E04405E0440000000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode -f /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/CMakeScripts/ALL_BUILD_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		5EAE005EAE005EAE00000000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode -f /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/CMakeScripts/ReRunCMake.make";
		};
		5F25005F25005F2500000000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode -f /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/CMakeScripts/ReRunCMake.make";
		};
		5F2AF05F2AF05F2AF0000000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode -f /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/CMakeScripts/install_postBuildPhase.make$CONFIGURATION all";
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		10233D010233D010233D0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				100F500100F500100F500000 /* model.cpp in Sources */,
				10100C010100C010100C0000 /* modelexception.cpp in Sources */,
				1010B901010B901010B90000 /* modelwindow.cpp in Sources */,
				10116B010116B010116B0000 /* glwidget.cpp in Sources */,
				101224010122401012240000 /* transformable.cpp in Sources */,
				1012D901012D901012D90000 /* compositeobject.cpp in Sources */,
				10138F010138F010138F0000 /* primitiveobject.cpp in Sources */,
				10143C010143C010143C0000 /* sphere.cpp in Sources */,
				1014EE01014EE01014EE0000 /* cylinder.cpp in Sources */,
				1015A401015A401015A40000 /* box.cpp in Sources */,
				101657010165701016570000 /* robot.cpp in Sources */,
				101709010170901017090000 /* bodyPart.cpp in Sources */,
				1017BC01017BC01017BC0000 /* kintreenode.cpp in Sources */,
				10186E010186E010186E0000 /* motor.cpp in Sources */,
				101921010192101019210000 /* interval.cpp in Sources */,
				1019D301019D301019D30000 /* link.cpp in Sources */,
				101A8C0101A8C0101A8C0000 /* joint.cpp in Sources */,
				101B480101B480101B480000 /* joint_revolute.cpp in Sources */,
				101BF60101BF60101BF60000 /* zpHandler.cpp in Sources */,
				101CA80101CA80101CA80000 /* worldhandler.cpp in Sources */,
				101D5C0101D5C0101D5C0000 /* moc_model.cxx in Sources */,
				101DF20101DF20101DF20000 /* moc_modelwindow.cxx in Sources */,
				101EC90101EC90101EC90000 /* moc_glwidget.cxx in Sources */,
				101F7F0101F7F0101F7F0000 /* moc_robot.cxx in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		10322D010322D010322D0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				103097010309701030970000 /* main.cpp in Sources */,
				103147010314701031470000 /* objectSoup.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		103E120103E120103E120000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 102389010238901023890000 /* KinematicModel */;
			targetProxy = 103DC20103DC20103DC20000 /* PBXContainerItemProxy */;
		};
		103E890103E890103E890000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 10334C010334C010334C0000 /* WorldModelDemo */;
			targetProxy = 103E3A0103E3A0103E3A0000 /* PBXContainerItemProxy */;
		};
		103F0D0103F0D0103F0D0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 5EAC305EAC305EAC30000000 /* ALL_BUILD */;
			targetProxy = 103EB10103EB10103EB10000 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		10255B010255B010255B0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CONFIGURATION_BUILD_DIR = /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/LibKinematicModel/Debug;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)\"'",
					QT_OPENGL_LIB,
					QT_GUI_LIB,
					QT_XML_LIB,
					QT_CORE_LIB,
					QT_DEBUG,
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/LibKinematicModel,
					"/Users/kail/Library/FreeSOLID-3.5.6/include",
					/Library/Frameworks/QtOpenGL.framework/Headers,
					/Library/Frameworks/QtGui.framework/Headers,
					/Library/Frameworks/QtXml.framework/Headers,
					/Library/Frameworks/QtCore.framework/Headers,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = KinematicModel;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/LibKinematicModel;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		1025E901025E901025E90000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CONFIGURATION_BUILD_DIR = /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/LibKinematicModel/Release;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)\"'",
					QT_OPENGL_LIB,
					QT_GUI_LIB,
					QT_XML_LIB,
					QT_CORE_LIB,
					QT_NO_DEBUG,
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/LibKinematicModel,
					"/Users/kail/Library/FreeSOLID-3.5.6/include",
					/Library/Frameworks/QtOpenGL.framework/Headers,
					/Library/Frameworks/QtGui.framework/Headers,
					/Library/Frameworks/QtXml.framework/Headers,
					/Library/Frameworks/QtCore.framework/Headers,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = KinematicModel;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/LibKinematicModel;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		102A1C0102A1C0102A1C0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CONFIGURATION_BUILD_DIR = /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/LibKinematicModel/MinSizeRel;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)\"'",
					QT_OPENGL_LIB,
					QT_GUI_LIB,
					QT_XML_LIB,
					QT_CORE_LIB,
					QT_NO_DEBUG,
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/LibKinematicModel,
					"/Users/kail/Library/FreeSOLID-3.5.6/include",
					/Library/Frameworks/QtOpenGL.framework/Headers,
					/Library/Frameworks/QtGui.framework/Headers,
					/Library/Frameworks/QtXml.framework/Headers,
					/Library/Frameworks/QtCore.framework/Headers,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = KinematicModel;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/LibKinematicModel;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		102C780102C780102C780000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CONFIGURATION_BUILD_DIR = /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/LibKinematicModel/RelWithDebInfo;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)\"'",
					QT_OPENGL_LIB,
					QT_GUI_LIB,
					QT_XML_LIB,
					QT_CORE_LIB,
					QT_NO_DEBUG,
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/LibKinematicModel,
					"/Users/kail/Library/FreeSOLID-3.5.6/include",
					/Library/Frameworks/QtOpenGL.framework/Headers,
					/Library/Frameworks/QtGui.framework/Headers,
					/Library/Frameworks/QtXml.framework/Headers,
					/Library/Frameworks/QtCore.framework/Headers,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = KinematicModel;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/LibKinematicModel;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		1033CC01033CC01033CC0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CONFIGURATION_BUILD_DIR = /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/WorldModelDemo/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)\"'",
					QT_OPENGL_LIB,
					QT_GUI_LIB,
					QT_XML_LIB,
					QT_CORE_LIB,
					QT_DEBUG,
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/LibKinematicModel,
					"/Users/kail/Library/FreeSOLID-3.5.6/include",
					/Library/Frameworks/QtOpenGL.framework/Headers,
					/Library/Frameworks/QtGui.framework/Headers,
					/Library/Frameworks/QtXml.framework/Headers,
					/Library/Frameworks/QtCore.framework/Headers,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-headerpad_max_install_names",
					/Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/LibKinematicModel/Debug/libKinematicModel.a,
					"/Users/kail/Library/FreeSOLID-3.5.6/src/.libs/libsolid.dylib",
					"-framework",
					QtOpenGL,
					"-framework",
					QtGui,
					"-framework",
					QtXml,
					"-framework",
					QtCore,
					"-framework",
					AGL,
					"-framework",
					OpenGL,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = WorldModelDemo;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/WorldModelDemo;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		103633010363301036330000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CONFIGURATION_BUILD_DIR = /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/WorldModelDemo/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)\"'",
					QT_OPENGL_LIB,
					QT_GUI_LIB,
					QT_XML_LIB,
					QT_CORE_LIB,
					QT_NO_DEBUG,
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/LibKinematicModel,
					"/Users/kail/Library/FreeSOLID-3.5.6/include",
					/Library/Frameworks/QtOpenGL.framework/Headers,
					/Library/Frameworks/QtGui.framework/Headers,
					/Library/Frameworks/QtXml.framework/Headers,
					/Library/Frameworks/QtCore.framework/Headers,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-headerpad_max_install_names",
					/Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/LibKinematicModel/Release/libKinematicModel.a,
					"/Users/kail/Library/FreeSOLID-3.5.6/src/.libs/libsolid.dylib",
					"-framework",
					QtOpenGL,
					"-framework",
					QtGui,
					"-framework",
					QtXml,
					"-framework",
					QtCore,
					"-framework",
					AGL,
					"-framework",
					OpenGL,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = WorldModelDemo;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/WorldModelDemo;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		1036AB01036AB01036AB0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CONFIGURATION_BUILD_DIR = /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/WorldModelDemo/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)\"'",
					QT_OPENGL_LIB,
					QT_GUI_LIB,
					QT_XML_LIB,
					QT_CORE_LIB,
					QT_NO_DEBUG,
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/LibKinematicModel,
					"/Users/kail/Library/FreeSOLID-3.5.6/include",
					/Library/Frameworks/QtOpenGL.framework/Headers,
					/Library/Frameworks/QtGui.framework/Headers,
					/Library/Frameworks/QtXml.framework/Headers,
					/Library/Frameworks/QtCore.framework/Headers,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-headerpad_max_install_names",
					/Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/LibKinematicModel/MinSizeRel/libKinematicModel.a,
					"/Users/kail/Library/FreeSOLID-3.5.6/src/.libs/libsolid.dylib",
					"-framework",
					QtOpenGL,
					"-framework",
					QtGui,
					"-framework",
					QtXml,
					"-framework",
					QtCore,
					"-framework",
					AGL,
					"-framework",
					OpenGL,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = WorldModelDemo;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/WorldModelDemo;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		103ACD0103ACD0103ACD0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CONFIGURATION_BUILD_DIR = /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/WorldModelDemo/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)\"'",
					QT_OPENGL_LIB,
					QT_GUI_LIB,
					QT_XML_LIB,
					QT_CORE_LIB,
					QT_NO_DEBUG,
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/LibKinematicModel,
					"/Users/kail/Library/FreeSOLID-3.5.6/include",
					/Library/Frameworks/QtOpenGL.framework/Headers,
					/Library/Frameworks/QtGui.framework/Headers,
					/Library/Frameworks/QtXml.framework/Headers,
					/Library/Frameworks/QtCore.framework/Headers,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-headerpad_max_install_names",
					/Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/LibKinematicModel/RelWithDebInfo/libKinematicModel.a,
					"/Users/kail/Library/FreeSOLID-3.5.6/src/.libs/libsolid.dylib",
					"-framework",
					QtOpenGL,
					"-framework",
					QtGui,
					"-framework",
					QtXml,
					"-framework",
					QtCore,
					"-framework",
					AGL,
					"-framework",
					OpenGL,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = WorldModelDemo;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/WorldModelDemo;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		5D27B05D27B05D27B0000000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = (
					"$(ARCHS_STANDARD_32_BIT)",
				);
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = "$(DEVELOPER_SDK_DIR)/MacOSX10.5.sdk";
				SYMROOT = /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/build;
			};
			name = Release;
		};
		5D28F05D28F05D28F0000000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = (
					"$(ARCHS_STANDARD_32_BIT)",
				);
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = "$(DEVELOPER_SDK_DIR)/MacOSX10.5.sdk";
				SYMROOT = /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/build;
			};
			name = MinSizeRel;
		};
		5D2B705D2B705D2B70000000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = (
					"$(ARCHS_STANDARD_32_BIT)",
				);
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = "$(DEVELOPER_SDK_DIR)/MacOSX10.5.sdk";
				SYMROOT = /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/build;
			};
			name = RelWithDebInfo;
		};
		5E0F905E0F905E0F90000000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)\"'",
					QT_OPENGL_LIB,
					QT_GUI_LIB,
					QT_XML_LIB,
					QT_CORE_LIB,
					QT_DEBUG,
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/LibKinematicModel,
					"/Users/kail/Library/FreeSOLID-3.5.6/include",
					/Library/Frameworks/QtOpenGL.framework/Headers,
					/Library/Frameworks/QtGui.framework/Headers,
					/Library/Frameworks/QtXml.framework/Headers,
					/Library/Frameworks/QtCore.framework/Headers,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		5E30B05E30B05E30B0000000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)\"'",
					QT_OPENGL_LIB,
					QT_GUI_LIB,
					QT_XML_LIB,
					QT_CORE_LIB,
					QT_NO_DEBUG,
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/LibKinematicModel,
					"/Users/kail/Library/FreeSOLID-3.5.6/include",
					/Library/Frameworks/QtOpenGL.framework/Headers,
					/Library/Frameworks/QtGui.framework/Headers,
					/Library/Frameworks/QtXml.framework/Headers,
					/Library/Frameworks/QtCore.framework/Headers,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		5E97405E97405E9740000000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = (
					"$(ARCHS_STANDARD_32_BIT)",
				);
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = "$(DEVELOPER_SDK_DIR)/MacOSX10.5.sdk";
				SYMROOT = /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode/build;
			};
			name = Debug;
		};
		5ECEF05ECEF05ECEF0000000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)\"'",
					QT_OPENGL_LIB,
					QT_GUI_LIB,
					QT_XML_LIB,
					QT_CORE_LIB,
					QT_NO_DEBUG,
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/LibKinematicModel,
					"/Users/kail/Library/FreeSOLID-3.5.6/include",
					/Library/Frameworks/QtOpenGL.framework/Headers,
					/Library/Frameworks/QtGui.framework/Headers,
					/Library/Frameworks/QtXml.framework/Headers,
					/Library/Frameworks/QtCore.framework/Headers,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		5EEFB05EEFB05EEFB0000000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)\"'",
					QT_OPENGL_LIB,
					QT_GUI_LIB,
					QT_XML_LIB,
					QT_CORE_LIB,
					QT_NO_DEBUG,
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/LibKinematicModel,
					"/Users/kail/Library/FreeSOLID-3.5.6/include",
					/Library/Frameworks/QtOpenGL.framework/Headers,
					/Library/Frameworks/QtGui.framework/Headers,
					/Library/Frameworks/QtXml.framework/Headers,
					/Library/Frameworks/QtCore.framework/Headers,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		5F37E05F37E05F37E0000000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)\"'",
					QT_OPENGL_LIB,
					QT_GUI_LIB,
					QT_XML_LIB,
					QT_CORE_LIB,
					QT_DEBUG,
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/LibKinematicModel,
					"/Users/kail/Library/FreeSOLID-3.5.6/include",
					/Library/Frameworks/QtOpenGL.framework/Headers,
					/Library/Frameworks/QtGui.framework/Headers,
					/Library/Frameworks/QtXml.framework/Headers,
					/Library/Frameworks/QtCore.framework/Headers,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		5F5AF05F5AF05F5AF0000000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)\"'",
					QT_OPENGL_LIB,
					QT_GUI_LIB,
					QT_XML_LIB,
					QT_CORE_LIB,
					QT_NO_DEBUG,
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/LibKinematicModel,
					"/Users/kail/Library/FreeSOLID-3.5.6/include",
					/Library/Frameworks/QtOpenGL.framework/Headers,
					/Library/Frameworks/QtGui.framework/Headers,
					/Library/Frameworks/QtXml.framework/Headers,
					/Library/Frameworks/QtCore.framework/Headers,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		5F7BC05F7BC05F7BC0000000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)\"'",
					QT_OPENGL_LIB,
					QT_GUI_LIB,
					QT_XML_LIB,
					QT_CORE_LIB,
					QT_NO_DEBUG,
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/LibKinematicModel,
					"/Users/kail/Library/FreeSOLID-3.5.6/include",
					/Library/Frameworks/QtOpenGL.framework/Headers,
					/Library/Frameworks/QtGui.framework/Headers,
					/Library/Frameworks/QtXml.framework/Headers,
					/Library/Frameworks/QtCore.framework/Headers,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		5F9DF05F9DF05F9DF0000000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				FRAMEWORK_SEARCH_PATHS = /Library/Frameworks;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)\"'",
					QT_OPENGL_LIB,
					QT_GUI_LIB,
					QT_XML_LIB,
					QT_CORE_LIB,
					QT_NO_DEBUG,
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/LibKinematicModel,
					"/Users/kail/Library/FreeSOLID-3.5.6/include",
					/Library/Frameworks/QtOpenGL.framework/Headers,
					/Library/Frameworks/QtGui.framework/Headers,
					/Library/Frameworks/QtXml.framework/Headers,
					/Library/Frameworks/QtCore.framework/Headers,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/kail/imClever/dev/VirtualSkin2/src/VirtualSkinLibrary/KinematicModel/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		102506010250601025060000 /* Build configuration list for PBXNativeTarget "KinematicModel" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				10255B010255B010255B0000 /* Debug */,
				1025E901025E901025E90000 /* Release */,
				102A1C0102A1C0102A1C0000 /* MinSizeRel */,
				102C780102C780102C780000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		103392010339201033920000 /* Build configuration list for PBXNativeTarget "WorldModelDemo" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1033CC01033CC01033CC0000 /* Debug */,
				103633010363301036330000 /* Release */,
				1036AB01036AB01036AB0000 /* MinSizeRel */,
				103ACD0103ACD0103ACD0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		5E0D405E0D405E0D40000000 /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				5E0F905E0F905E0F90000000 /* Debug */,
				5E30B05E30B05E30B0000000 /* Release */,
				5ECEF05ECEF05ECEF0000000 /* MinSizeRel */,
				5EEFB05EEFB05EEFB0000000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		5E95D05E95D05E95D0000000 /* Build configuration list for PBXProject "KinematicModel" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				5E97405E97405E9740000000 /* Debug */,
				5D27B05D27B05D27B0000000 /* Release */,
				5D28F05D28F05D28F0000000 /* MinSizeRel */,
				5D2B705D2B705D2B70000000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		5F33D05F33D05F33D0000000 /* Build configuration list for PBXAggregateTarget "install" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				5F37E05F37E05F37E0000000 /* Debug */,
				5F5AF05F5AF05F5AF0000000 /* Release */,
				5F7BC05F7BC05F7BC0000000 /* MinSizeRel */,
				5F9DF05F9DF05F9DF0000000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = 5E8D305E8D305E8D30000000 /* Project object */;
}
